#!/bin/bash

# D√©finir les couleurs pour les messages d'echo
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
RED="\033[0;31m"
NC="\033[0m" # No Color

# Fonction pour afficher les messages avec couleurs et emojis
function echo_step {
    echo -e "${YELLOW}üöÄ $1${NC}"
}

function echo_success {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

function echo_error {
    echo -e "${RED}‚ùå $1${NC}"
}

# D√©finir le r√©pertoire de base
BASE_DIR="$HOME"
BIN_DIR="$BASE_DIR/bin"

# V√©rifier et cr√©er le r√©pertoire bin si n√©cessaire
echo_step "V√©rification du r√©pertoire $BIN_DIR..."
if [ ! -d "$BIN_DIR" ]; then
    echo_step "Le r√©pertoire $BIN_DIR n'existe pas. Cr√©ation..."
    mkdir -p "$BIN_DIR"
    if [ $? -eq 0 ]; then
        echo_success "Le r√©pertoire $BIN_DIR a √©t√© cr√©√©."
    else
        echo_error "√âchec de la cr√©ation du r√©pertoire $BIN_DIR."
        exit 1
    fi
else
    echo_success "Le r√©pertoire $BIN_DIR existe d√©j√†."
fi

# Ajouter le r√©pertoire bin au PATH
echo_step "Ajout de $BIN_DIR au PATH..."
export PATH="$BIN_DIR:$PATH"
if [[ ":$PATH:" == *":$BIN_DIR:"* ]]; then
    echo_success "$BIN_DIR ajout√© au PATH."
else
    echo_error "√âchec de l'ajout de $BIN_DIR au PATH."
    exit 1
fi

# V√©rification et installation de curl et wget
echo_step "V√©rification et installation des d√©pendances n√©cessaires..."

# V√©rifier et installer curl
if ! command -v curl &> /dev/null; then
    echo_step "curl n'est pas install√©. Installation de curl..."
    sudo apt update && sudo apt install -y curl
    if [ $? -eq 0 ]; then
        echo_success "curl install√©."
    else
        echo_error "√âchec de l'installation de curl."
        exit 1
    fi
else
    echo_success "curl est d√©j√† install√©."
fi

# V√©rifier et installer wget
if ! command -v wget &> /dev/null; then
    echo_step "wget n'est pas install√©. Installation de wget..."
    sudo apt update && sudo apt install -y wget
    if [ $? -eq 0 ]; then
        echo_success "wget install√©."
    else
        echo_error "√âchec de l'installation de wget."
        exit 1
    fi
else
    echo_success "wget est d√©j√† install√©."
fi

# √âtape 1: Installer Oh My Posh
echo_step "Installation de Oh My Posh..."
curl -s https://ohmyposh.dev/install.sh | bash -s -- -d "$BIN_DIR"
if [ $? -eq 0 ]; then
    echo_success "Oh My Posh install√©."
else
    echo_error "√âchec de l'installation de Oh My Posh."
    exit 1
fi

# √âtape 2: T√©l√©charger le th√®me
echo_step "T√©l√©chargement du th√®me..."
wget -O "$BIN_DIR/dev-remote.omp.yaml" https://raw.githubusercontent.com/f3lin/my-terminal/main/themes/dev-remote.omp.yaml
if [ $? -eq 0 ]; then
    echo_success "Th√®me t√©l√©charg√©."
else
    echo_error "√âchec du t√©l√©chargement du th√®me."
    exit 1
fi

# √âtape 3: Mettre √† jour le profil
echo_step "Mise √† jour du profil..."
echo 'export PATH="$HOME/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(oh-my-posh init bash --config ~/bin/dev-remote.omp.yaml)"' >> ~/.bashrc
source ~/.bashrc
echo_success "Profil mis √† jour."

# √âtape 4: Installer la police Nerd Fonts
echo_step "Installation de la police Nerd Fonts..."
wget -O Lilex.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/Lilex.zip
if [ $? -eq 0 ]; then
    unzip Lilex.zip -d ~/.fonts
    fc-cache -fv
    rm Lilex.zip
    echo_success "Police Nerd Fonts install√©e."
else
    echo_error "√âchec de l'installation de la police Nerd Fonts."
    exit 1
fi

# √âtape 5: Installer exa
echo_step "Installation de exa..."
sudo apt update && sudo apt install -y exa
if [ $? -eq 0 ]; then
    echo_success "exa install√©."
else
    echo_error "√âchec de l'installation de exa."
    echo_step "Installation de tree en remplacement de exa"
    sudo apt-get install -y tree
    if [ $? -eq 0 ]; then
        echo_success "tree install√© √† la place de exa."
    else
        echo_error "√âchec de l'installation de tree."
        exit 1
    fi
fi

# Recharger le bash
echo_step "Rechargement du terminal..."
exec bash
